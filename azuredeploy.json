{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
      "serverName": {
        "type": "string",
        "defaultValue": "[uniqueString('sql', resourceGroup().id)]",
        "metadata": {
          "description": "The name of the SQL logical server."
        }
      },
      "sqlDBName": {
        "type": "string",
        "defaultValue": "SampleDB",
        "metadata": {
          "description": "The name of the SQL Database."
        }
      },
      "location": {
        "type": "string",
        "defaultValue": "[resourceGroup().location]",
        "metadata": {
          "description": "Location for all resources."
        }
      },
      "administratorLogin": {
        "type": "string",
        "metadata": {
          "description": "The administrator username of the SQL logical server."
        }
      },
      "administratorLoginPassword": {
        "type": "securestring",
        "metadata": {
          "description": "The administrator password of the SQL logical server."
        }
      },
      "webAppName": {
        "type": "string",
        "defaultValue": "[concat('webApp-', uniqueString(resourceGroup().id))]",
        "minLength": 2,
        "metadata": {
          "description": "Web app name."
        }
      },
      "appServicePlanSku": {
        "type": "string",
        "defaultValue": "F1",
        "metadata": {
          "description": "The SKU of App Service Plan."
        }
      },
      "linuxFxVersion": {
        "type": "string",
        "defaultValue": "PYTHON|3.8",
        "metadata": {
          "description": "The Runtime stack of current web app"
        }
      },
      "repoUrl": {
        "type": "string",
        "defaultValue": " ",
        "metadata": {
          "description": "Optional Git Repo URL"
        }
      },
      "keyVaultName": {
        "type": "string",
        "defaultValue": "[concat('keyVault-', uniqueString(resourceGroup().id))]",
        "minLength": 2,
        "metadata": {
          "description": "Key Vault name."
        }
      },
      "aadUserObjectId": {
        "type": "string",
        "metadata": {
          "description": "AAD Object ID."
        }
      }
    },
    "functions": [],
    "variables": {
      "appServicePlanPortalName": "[concat('AppServicePlan-', parameters('webAppName'))]"
    },
    "resources":  [
      {
        "type": "Microsoft.Sql/servers",
        "apiVersion": "2020-02-02-preview",
        "name": "[parameters('serverName')]",
        "location": "[parameters('location')]",
        "properties": {
          "administratorLogin": "[parameters('administratorLogin')]",
          "administratorLoginPassword": "[parameters('administratorLoginPassword')]"
        },
        "resources": [
          {
            "type": "databases",
            "apiVersion": "2020-08-01-preview",
            "name": "[parameters('sqlDBName')]",
            "location": "[parameters('location')]",
            "sku": {
              "name": "Standard",
              "tier": "Standard"
            },
            "dependsOn": [
              "[resourceId('Microsoft.Sql/servers', concat(parameters('serverName')))]"
            ],
            "properties": {}
          }
        ]
      },
      {
        "type": "Microsoft.Web/serverfarms",
        "apiVersion": "2020-06-01",
        "name": "[variables('appServicePlanPortalName')]",
        "location": "[parameters('location')]",
        "sku": {
          "name": "[parameters('appServicePlanSku')]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers', concat(parameters('serverName')))]"
        ],
        "kind": "linux",
        "properties": {
          "reserved": true
        }
      },
      {
        "type": "Microsoft.Web/sites",
        "apiVersion": "2020-06-01",
        "name": "[parameters('webAppName')]",
        "location": "[parameters('location')]",

        "dependsOn": [
          "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]"
        ],
        "properties": {
          "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', variables('appServicePlanPortalName'))]",
          "siteConfig": {
            "linuxFxVersion": "[parameters('linuxFxVersion')]"
          },
          "resources": [
            {
              "condition": "[contains(parameters('repoUrl'),'http')]",
              "type": "sourcecontrols",
              "apiVersion": "2020-06-01",
              "name": "web",
              "location": "[parameters('location')]",
              "dependsOn": [
                "[resourceId('Microsoft.Web/sites', parameters('webAppName'))]"
              ],
              "properties": {
                "repoUrl": "[parameters('repoUrl')]",
                "branch": "master",
                "isManualIntegration": true
              }
            }
          ]
        }
      },
      {
        "type": "Microsoft.KeyVault/vaults",
        "apiVersion": "2019-09-01",
        "name": "[parameters('keyVaultName')]",
        "location": "[parameters('location')]",
        "dependsOn": [
          "[resourceId('Microsoft.Sql/servers', concat(parameters('serverName')))]"
        ],
        "properties": {
          "enableRbacAuthorization": false,
          "enableSoftDelete": false,
          "enabledForDeployment": false,
          "enabledForDiskEncryption": false,
          "enabledForTemplateDeployment": false,
          "tenantId": "[subscription().tenantId]",
          "accessPolicies": [
              {
                "tenantId": "[subscription().tenantId]",
                "objectId": "[parameters('aadUserObjectId')]",
                "permissions": {
                    "secrets": [
                        "list",
                        "get",
                        "set"
                    ]
                }
              },
              {
                "tenantId": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2018-02-01', 'Full').identity.tenantId]",
                "objectId": "[reference(resourceId('Microsoft.Web/sites', parameters('webAppName')), '2018-02-01', 'Full').identity.principalId]",
                "permissions": {
                    "secrets": [
                        "list",
                        "get",
                        "set"
                    ]
                }
              }
          ],
          "sku": {
              "name": "Standard",
              "family": "A"
          }
        }
      },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "apiVersion": "2021-04-01-preview",
        "name": "[format('{0}/{1}', parameters('keyVaultName'), 'SqlServerName')]",
        "properties": {
          "value": "[parameters('serverName')]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
        ]
      },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "apiVersion": "2021-04-01-preview",
        "name": "[format('{0}/{1}', parameters('keyVaultName'), 'SqlServerDb')]",
        "properties": {
          "value": "[parameters('sqlDBName')]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
        ]
      },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "apiVersion": "2021-04-01-preview",
        "name": "[format('{0}/{1}', parameters('keyVaultName'), 'SqlServerUsername')]",
        "properties": {
          "value": "[parameters('administratorLogin')]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
        ]
      },
      {
        "type": "Microsoft.KeyVault/vaults/secrets",
        "apiVersion": "2021-04-01-preview",
        "name": "[format('{0}/{1}', parameters('keyVaultName'), 'SqlServerPassword')]",
        "properties": {
          "value": "[parameters('administratorLoginPassword')]"
        },
        "dependsOn": [
          "[resourceId('Microsoft.KeyVault/vaults', parameters('keyVaultName'))]"
        ]
      }
    ],
    "outputs": {}
}